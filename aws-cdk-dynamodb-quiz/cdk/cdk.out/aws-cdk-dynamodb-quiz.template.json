{
 "Description": "Stack for MicroProfile with Quarkus using DynamoDB",
 "Resources": {
  "quizsinstackE64DF6D8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "uuid",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "uuid",
      "AttributeType": "S"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 1,
     "WriteCapacityUnits": 1
    },
    "TableName": "aws-cdk-dynamodb-quiz-quizs",
    "Tags": [
     {
      "Key": "application",
      "Value": "aws-cdk-dynamodb-quiz"
     },
     {
      "Key": "environment",
      "Value": "demo"
     },
     {
      "Key": "project",
      "Value": "MicroProfile with Quarkus on AWS Lambda using DynamoDB"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "aws-cdk-dynamodb-quiz/quizs-in-stack/Resource"
   }
  },
  "QuizLambdaRole318CDE41": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Quiz role ... with policy to use DynamoDb and Logs",
    "RoleName": "aws-cdk-dynamodb-quiz-quiz-role",
    "Tags": [
     {
      "Key": "application",
      "Value": "aws-cdk-dynamodb-quiz"
     },
     {
      "Key": "environment",
      "Value": "demo"
     },
     {
      "Key": "project",
      "Value": "MicroProfile with Quarkus on AWS Lambda using DynamoDB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-cdk-dynamodb-quiz/Quiz-Lambda-Role/Resource"
   }
  },
  "QuizLambdaRoleDefaultPolicy5DE988C3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:DescribeTable",
        "dynamodb:ListTables",
        "dynamodb:PutItem",
        "dynamodb:GetItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:Scan",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "QuizLambdaRoleDefaultPolicy5DE988C3",
    "Roles": [
     {
      "Ref": "QuizLambdaRole318CDE41"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "aws-cdk-dynamodb-quiz/Quiz-Lambda-Role/DefaultPolicy/Resource"
   }
  },
  "dkjarrylambdaquizboundaryquizsCDF36E33": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a4bb88d2391179e4ce44908a4e34126797747b80d45a0e1207e74712d8da5a9a.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "QuizLambdaRole318CDE41",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "dynamoDbTableName": {
       "Ref": "quizsinstackE64DF6D8"
      }
     }
    },
    "FunctionName": "dk_jarry_lambda_quiz_boundary_quizs",
    "Handler": "io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest",
    "MemorySize": 512,
    "ReservedConcurrentExecutions": 2,
    "Runtime": "java11",
    "Tags": [
     {
      "Key": "application",
      "Value": "aws-cdk-dynamodb-quiz"
     },
     {
      "Key": "environment",
      "Value": "development"
     },
     {
      "Key": "project",
      "Value": "MicroProfile with Quarkus on AWS Lambda using DynamoDB"
     }
    ],
    "Timeout": 10
   },
   "DependsOn": [
    "QuizLambdaRoleDefaultPolicy5DE988C3",
    "QuizLambdaRole318CDE41"
   ],
   "Metadata": {
    "aws:cdk:path": "aws-cdk-dynamodb-quiz/dk_jarry_lambda_quiz_boundary_quizs/Resource",
    "aws:asset:path": "asset.a4bb88d2391179e4ce44908a4e34126797747b80d45a0e1207e74712d8da5a9a.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "HttpApiGatewayIntegrationD111AA28": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "HttpApiGatewayIntegration",
    "ProtocolType": "HTTP",
    "Tags": {
     "application": "aws-cdk-dynamodb-quiz",
     "environment": "demo",
     "project": "MicroProfile with Quarkus on AWS Lambda using DynamoDB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-cdk-dynamodb-quiz/HttpApiGatewayIntegration/Resource"
   }
  },
  "HttpApiGatewayIntegrationDefaultRouteHttpApiGatewayIntegration717E7BE4": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiGatewayIntegrationD111AA28"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "dkjarrylambdaquizboundaryquizsCDF36E33",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "aws-cdk-dynamodb-quiz/HttpApiGatewayIntegration/DefaultRoute/HttpApiGatewayIntegration/Resource"
   }
  },
  "HttpApiGatewayIntegrationDefaultRouteHttpApiGatewayIntegrationPermission857CA78E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "dkjarrylambdaquizboundaryquizsCDF36E33",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HttpApiGatewayIntegrationD111AA28"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-cdk-dynamodb-quiz/HttpApiGatewayIntegration/DefaultRoute/HttpApiGatewayIntegration-Permission"
   }
  },
  "HttpApiGatewayIntegrationDefaultRoute6F417493": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiGatewayIntegrationD111AA28"
    },
    "RouteKey": "$default",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "HttpApiGatewayIntegrationDefaultRouteHttpApiGatewayIntegration717E7BE4"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-cdk-dynamodb-quiz/HttpApiGatewayIntegration/DefaultRoute/Resource"
   }
  },
  "HttpApiGatewayIntegrationDefaultStageD61D24F4": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "HttpApiGatewayIntegrationD111AA28"
    },
    "StageName": "$default",
    "AutoDeploy": true,
    "Tags": {
     "application": "aws-cdk-dynamodb-quiz",
     "environment": "demo",
     "project": "MicroProfile with Quarkus on AWS Lambda using DynamoDB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "aws-cdk-dynamodb-quiz/HttpApiGatewayIntegration/DefaultStage/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02QTW+DMAyGf0vvwWXdoTuurTRtu6xiu1cmZNQDEkScVijivy8JReL0fsSxnmQHLzn4fIN3m8mqyVoqwX8zykaE6uKrUWNnqlD+YNkqcfrVyUyCsANfmLlLejYtyTHG2U2ixa6sEPyb05LJ6Hi29mc1dGRtSJOwzxe0VrGFQ5SQ4ehko/iIVgnsqUZWdxxvO/Dh6qGnuOFDs6oHXBYWxnECCk+o1TSJQlnjBqlEWhpb0nUc+HLcO053lpHgT0ZXxIknz7Dtrwj55vXxOduoa5DHhH9n7iNP1JkgujVazAvSJ95w+7SHHPabP0uUDU4zdQqKWf8Bo4p4oJMBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "aws-cdk-dynamodb-quiz/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "FunctionArn": {
   "Value": {
    "Fn::GetAtt": [
     "dkjarrylambdaquizboundaryquizsCDF36E33",
     "Arn"
    ]
   }
  },
  "HttpApiGatewayUrlOutput": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "HttpApiGatewayIntegrationD111AA28"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      }
     ]
    ]
   }
  },
  "HttpApiGatewayCurlOutput": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "curl -i https://",
      {
       "Ref": "HttpApiGatewayIntegrationD111AA28"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/quizs"
     ]
    ]
   }
  },
  "HttpApiGatewayTestOutput": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "../create_quiz.sh https://",
      {
       "Ref": "HttpApiGatewayIntegrationD111AA28"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/quizs"
     ]
    ]
   }
  },
  "HttpApiGatewaySTOutput": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "mvn compile quarkus:dev -Dquarkus.rest-client.extensions-api.url=https://",
      {
       "Ref": "HttpApiGatewayIntegrationD111AA28"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}